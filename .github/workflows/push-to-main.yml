name: Backend push to main
on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - ".github/workflows/push-to-main.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  ci-checks:
    name: Sonar main branch scan
    runs-on: ubuntu-24.04
    env:
      SAM_CLI_TELEMETRY: 0
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup nodeJS v20
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: backend/.nvmrc
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm clean-install

      # Generate unit test coverage report for Sonar main branch analysis
      - name: Run Tests
        run: npm run test

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@0303d6b62e310685c0e34d0b9cde218036885c4d # v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend

  build-and-push-to-dev:
    name: 'Push test image and SAM artifact to dev'
    needs: ci-checks
    runs-on: ubuntu-24.04
    env:
      DEV_TEST_IMAGE_REPOSITORY: ${{ secrets.DEV_TEST_IMAGE_REPOSITORY }}
      DEV_CONTAINER_SIGN_KMS_KEY: ${{ secrets.DEV_CONTAINER_SIGN_KMS_KEY }}
      IMAGE_TAG: latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
    - name: Check out repository code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true

    - name: Setup nodeJS v20
      uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
      with:
        node-version-file: backend/.nvmrc
        cache: npm
        cache-dependency-path: backend/package-lock.json

    - name: Install Cosign
      uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a #v3.8.1
      with:
        cosign-release: 'v1.9.0'

    - name: Install dependencies
      run: npm clean-install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.DEV_GH_ACTIONS_ROLE_ARN }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@b06ccd195086ba5254c95c627ee1cbeab86c7432 #main

    - name: Build test image
      run: docker build -t $DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG . 

    - name: Push image
      run: docker push $DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

    - name: Sign the image
      run: cosign sign --key awskms:///$DEV_CONTAINER_SIGN_KMS_KEY $DEV_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

    - name: SAM validate and lint
      run: sam validate --lint

    - name: SAM build
      run: sam build

    - name: Upload SAM artifact into the S3 artifact bucket
      uses: govuk-one-login/devplatform-upload-action@v3.9.4
      with:
        artifact-bucket-name: ${{ secrets.DEV_ARTIFACT_BUCKET }}
        signing-profile-name: ${{ secrets.DEV_SIGNING_PROFILE_NAME }}
        template-file: .aws-sam/build/template.yaml
        working-directory: backend

  build-and-push-to-build:
    name: Push test image and SAM artifact to build
    needs: ci-checks
    runs-on: ubuntu-24.04
    env:
      BUILD_TEST_IMAGE_REPOSITORY: ${{ secrets.BUILD_TEST_IMAGE_REPOSITORY }}
      BUILD_CONTAINER_SIGN_KMS_KEY: ${{ secrets.BUILD_CONTAINER_SIGN_KMS_KEY }}
      IMAGE_TAG: latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Setup nodeJS v20
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: backend/.nvmrc
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a #v3.8.1
        with:
          cosign-release: 'v1.9.0'

      - name: Install dependencies
        run: npm clean-install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573 #main
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.BUILD_GH_ACTIONS_ROLE_ARN }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@b06ccd195086ba5254c95c627ee1cbeab86c7432 #main

      - name: Build test image
        run: docker build -t $BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG . 

      - name: Push image
        run: docker push $BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

      - name: Sign the image
        run: cosign sign --key awskms:///$BUILD_CONTAINER_SIGN_KMS_KEY $BUILD_TEST_IMAGE_REPOSITORY:$IMAGE_TAG

      - name: Sam validate and lint
        run: sam validate --lint

      - name: Sam build
        run: sam build

      - name: Upload SAM artifact into the S3 artifact bucket
        uses: govuk-one-login/devplatform-upload-action@v3.9.4
        with:
          artifact-bucket-name: ${{ secrets.BUILD_ARTIFACT_BUCKET }}
          signing-profile-name: ${{ secrets.BUILD_SIGNING_PROFILE_NAME}}
          template-file: .aws-sam/build/template.yaml
          working-directory: backend