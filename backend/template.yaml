AWSTemplateFormatVersion: "2010-09-09"

Description: Scheduled Lambda Function with esbuild Build

Parameters:
  DeployAlarmsInDev:
    Description: Set to `true` to deploy alarms in a dev environment
    Type: String
    Default: true

  CodeSigningConfigArn:
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Type: String
    Default: none

  Environment:
    Description: The name of the environment to deploy to
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production
    Default: dev

  PermissionsBoundary:
    Description: |
      The ARN of the permissions boundary to apply to any role created by the template
    Type: String
    Default: none

  VpcStackName:
    Description: |
      The stack name of the VPC where the Lambda functions will be deployed
    Type: String
    Default: devplatform-vpc

  DeployMetricFiltersInNonProdLikeEnvironment:
    Description: Set to the string value `true` to deploy metric filters in a DEV environment
    Type: String
    Default: false

Mappings:
  EnvironmentVariables:
    dev:
      CertificateArnV1UsEast1: arn:aws:acm:us-east-1:537124944731:certificate/b0322e50-f75b-4fa3-ac65-4a42ac2380d3
      CertificateWildcardArnV1UsEast1: arn:aws:acm:us-east-1:537124944731:certificate/c1f3daa3-fa88-4cb2-b3cc-0d5ca43d8d80
      dnsSuffix: crs.dev.account.gov.uk
      LambdaLogLevel: DEBUG
    build:
      CertificateArnV1UsEast1: arn:aws:acm:us-east-1:881490088364:certificate/e913c6e7-1b41-4d5a-8731-6f026ea12b62
      dnsSuffix: crs.build.account.gov.uk
      LambdaLogLevel: INFO
    staging:
      CertificateArnV1UsEast1: arn:aws:acm:us-east-1:253490791635:certificate/2a8b32c4-9893-476b-a57f-881029f00db0
      dnsSuffix: crs.staging.account.gov.uk
      LambdaLogLevel: INFO
    integration:
      CertificateArnV1UsEast1: PLACEHOLDER
      dnsSuffix: crs.integration.account.gov.uk
      LambdaLogLevel: INFO
    production:
      CertificateArnV1UsEast1: PLACEHOLDER
      dnsSuffix: crs.account.gov.uk
      LambdaLogLevel: INFO

  AccountAccess:
    dev:
      AccountId: arn:aws:iam::537124944731:root
    build:
      AccountId: arn:aws:iam::881490088364:root
    integration:
      AccountId: arn:aws:iam::605134474558:root
    production:
      AccountId: arn:aws:iam::528757826809:root
    staging:
      AccountId: arn:aws:iam::253490791635:root

  CslsConfiguration:
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

  KMS:
    dev:
      PendingDeletionInDays: 7
    build:
      PendingDeletionInDays: 30
    integration:
      PendingDeletionInDays: 30
    production:
      PendingDeletionInDays: 30
    staging:
      PendingDeletionInDays: 30

  LogRetention:
    dev:
      RetentionPeriod: 30
    build:
      RetentionPeriod: 30
    staging:
      RetentionPeriod: 30
    integration:
      RetentionPeriod: 30
    production:
      RetentionPeriod: 30

  PrivateApigw:
    dev:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    build:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    staging:
      ApiBurstLimit: 10
      ApiRateLimit: 10
    integration:
      ApiBurstLimit: 0
      ApiRateLimit: 0
    production:
      ApiBurstLimit: 0
      ApiRateLimit: 0

  StaticVariables:
    urls:
      WarningAlarmsRunbook: https://govukverify.atlassian.net/wiki/spaces/DCMAW/pages/4453826602/Mobile+Backend+Alarms+and+Thresholds

Conditions:
  DeployAlarms: !Or
    - !Not
      - !Equals
        - !Ref Environment
        - dev
    - !Equals
      - !Ref DeployAlarmsInDev
      - true

  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev

  UsePermissionsBoundary: !Not
    - !Equals
      - !Ref PermissionsBoundary
      - none

  UseCodeSigning: !Not
    - !Equals
      - !Ref CodeSigningConfigArn
      - none

  StackNameIsCrsBackend: !Equals
    - !Ref AWS::StackName
    - crs-backend

  IsProdLikeEnvironment: !Or
    - !Equals
      - !Ref Environment
      - build
    - !Equals
      - !Ref Environment
      - staging
    - !Equals
      - !Ref Environment
      - integration
    - !Equals
      - !Ref Environment
      - production

  DeployMetricFilters: !Or
    - !Condition IsProdLikeEnvironment
    - !Equals
      - !Ref DeployMetricFiltersInNonProdLikeEnvironment
      - true

Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    AutoPublishAlias: live
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    MemorySize: 512
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    Runtime: nodejs22.x
    Timeout: 3
    LoggingConfig:
      ApplicationLogLevel: !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - LambdaLogLevel
      SystemLogLevel: !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - LambdaLogLevel
      LogFormat: JSON

Resources:
  StatusListTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !If
        - IsDevEnvironment
        - !Sub ${AWS::StackName}-StatusListTable
        - StatusListTable
      AttributeDefinitions:
        - AttributeName: uri
          AttributeType: S
        - AttributeName: idx
          AttributeType: N
      KeySchema:
        - AttributeName: uri
          KeyType: HASH
        - AttributeName: idx
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
        RecoveryPeriodInDays: 7
      ProvisionedThroughput:
        ReadCapacityUnits: 100
        WriteCapacityUnits: 100
      Tags:
        - Key: BackupFrequency
          Value: Bihourly

  IssueStatusListEntryFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - IssueStatusListEntryLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        EntryPoints:
          - src/functions/issueStatusListEntryHandler.ts
    Properties:

      #APIGw integration
      Events:
        IssueIndex:
          Type: Api
          Properties:
            Path: /issue
            Method: post
            RestApiId: !Ref PrivateApi
      FunctionName: !Sub ${AWS::StackName}-issue-status-list-entry
      Handler: src/functions/issueStatusListEntryHandler.handler
      Role: !GetAtt IssueStatusListEntryFunctionLambdaRole.Arn
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: IssueStatusListEntry
          CLIENT_REGISTRY_BUCKET: !Ref ClientRegistryBucket
          CLIENT_REGISTRY_FILE_KEY: mockClientRegistry.json #remove "mock" when using the real file
          TXMA_QUEUE_URL: !Ref TxMASQSQueue
          BITSTRING_QUEUE_URL: !Ref BitstringAvailableSlotsSQS
          TOKEN_STATUS_QUEUE_URL: !Ref TokenStatusAvailableSlotsSQS
          STATUS_LIST_TABLE: !Ref StatusListTable
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdA
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdB
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdC

  IssueStatusListEntryFunctionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-issue-status-list-entry-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: IssueStatusListEntryFunctionLoggingPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: VpcPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Resource: '*'
        - PolicyName: S3BucketReadAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: !Sub arn:aws:s3:::${AWS::StackName}-${Environment}-client-registry/*
        - PolicyName: DBReadAndWriteAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                Resource:
                  - !GetAtt StatusListTable.Arn
        - PolicyName: IssueStatusListEntryFunctionSQSPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                Effect: Allow
                Resource:
                  - !GetAtt TxMASQSQueue.Arn
                  - !GetAtt BitstringAvailableSlotsSQS.Arn
                  - !GetAtt TokenStatusAvailableSlotsSQS.Arn
              - Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  - !GetAtt TxMAKMSEncryptionKey.Arn
                  - !GetAtt BitstringAvailableSlotsEncryptionKey.Arn
                  - !GetAtt TokenStatusAvailableSlotsEncryptionKey.Arn
            Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  IssueStatusListEntryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-issue-status-list-entry
      RetentionInDays: !FindInMap
        - LogRetention
        - !Ref Environment
        - RetentionPeriod

  IssueStatusListEntryVersionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.messageCode = *) }'
      LogGroupName: !Ref IssueStatusListEntryLogGroup
      MetricTransformations:
        - Dimensions:
            - Key: MessageCode
              Value: $.messageCode
            - Key: Version
              Value: $.functionVersion
          MetricName: IssueStatusListEntryMessageCode
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricValue: "1"
    Condition: DeployMetricFilters

  CSLSIssueStatusListEntryFunctionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref IssueStatusListEntryLogGroup
    Condition: IsProdLikeEnvironment

  FindAvailableSlotsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        EntryPoints:
          - src/functions/findAvailableSlotsHandler.ts
    Properties:
      FunctionName: !Sub ${AWS::StackName}-find-available-slots
      Handler: src/functions/findAvailableSlotsHandler.findAvailableSlots
      Timeout: 900 # 15 minutes
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole

        # S3 read access policy
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub arn:aws:s3:::${AWS::StackName}-${Environment}-list-configuration/*

        # SQS send message permissions
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:GetQueueAttributes
              Resource:
                - !GetAtt BitstringAvailableSlotsSQS.Arn
                - !GetAtt TokenStatusAvailableSlotsSQS.Arn

        # KMS permissions for queue encryption
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
                - kms:Decrypt
              Resource:
                - !GetAtt BitstringAvailableSlotsEncryptionKey.Arn
                - !GetAtt TokenStatusAvailableSlotsEncryptionKey.Arn
      Environment:
        Variables:
          BITSTRING_QUEUE_URL: !Ref BitstringAvailableSlotsSQS
          TOKEN_STATUS_QUEUE_URL: !Ref TokenStatusAvailableSlotsSQS
          LIST_CONFIGURATION_BUCKET: !Ref ListConfigurationBucket
          CONFIGURATION_FILE_KEY: mockListConfiguration.json #remove "mock" when using the real file
          TARGET_QUEUE_DEPTH: "10000"
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(8 hours) #change to 7 days when going live
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-PrivateSubnetIdA
          - !ImportValue
            Fn::Sub: ${VpcStackName}-PrivateSubnetIdB
          - !ImportValue
            Fn::Sub: ${VpcStackName}-PrivateSubnetIdC

  # Revoke Lambda
  RevokeFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - RevokeLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        EntryPoints:
          - src/functions/revokeHandler.ts
    Properties:

      #APIGw integration
      Events:
        IssueIndex:
          Type: Api
          Properties:
            Path: /revoke
            Method: post
            RestApiId: !Ref PrivateApi
      FunctionName: !Sub ${AWS::StackName}-revoke
      Handler: src/functions/revokeHandler.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdA
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdB
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdC

  RevokeFunctionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-revoke-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: RevokeFunctionLoggingPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt StatusListPublisherLogGroup.Arn
        - PolicyName: DynamoDBReadOnly
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !GetAtt StatusListTable.Arn
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  RevokeLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-revoke-logs
      RetentionInDays: !FindInMap
        - LogRetention
        - !Ref Environment
        - RetentionPeriod

  CSLSRevokeFunctionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref RevokeLogGroup
    Condition: IsProdLikeEnvironment

  RevokeAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-revoke-access-logs
      RetentionInDays: !FindInMap
        - LogRetention
        - !Ref Environment
        - RetentionPeriod

  CSLSRevokeFunctionAccessSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref RevokeAccessLogs
    Condition: IsProdLikeEnvironment

    # Revoke Alarms
  Revoke4XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /revoke endpoint with a 4XX error. See runbook: ${WarningAlarmsRunbookUrl}'
        - WarningAlarmsRunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-revoke-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage4XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  Revoke4XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /revoke endpoint with a 4XX error. See runbook: ${WarningAlarmsRunbookUrl}'
        - WarningAlarmsRunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-revoke-4xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum4XX>=2),errorPercentage4XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum4XX
          Label: Number of 4XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: 4XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum4XX/invocations) * 100
          Id: errorPercentage4XX
          Label: Number of 4XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  Revoke5XXHighThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '80% or more of requests are failing on the /revoke endpoint with a 5XX error. See runbook: ${WarningAlarmsRunbookUrl}'
        - WarningAlarmsRunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-high-threshold-revoke-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF(invocations>=10,errorPercentage5XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 80
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  Revoke5XXLowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - '1% or more of requests are failing on the /revoke endpoint with a 5XX error. See runbook: ${WarningAlarmsRunbookUrl}'
        - WarningAlarmsRunbookUrl: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-low-threshold-revoke-5xx-api-gw
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Expression: IF((invocations>=4) && (errorSum5XX>=2),errorPercentage5XX)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: errorSum5XX
          Label: Number of 5XX errors
          MetricStat:
            Metric:
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /revoke
              MetricName: 5XXError
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Expression: (errorSum5XX/invocations) * 100
          Id: errorPercentage5XX
          Label: Number of 5XX errors returned as a percentage
          ReturnData: false
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  ApiGatewayLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - There is increased latency on the API Gateway. ${WarningAlarmsRunbookURL}"
        - WarningAlarmsRunbookURL: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-api-gateway-latency
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 2
      EvaluationPeriods: 5
      Metrics:
        - Id: m1
          Label: Sum of requests sent to the API Gateway
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: m2
          Label: Maximum latency
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private-api
              MetricName: Latency
              Namespace: AWS/ApiGateway
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Expression: IF(m1 >= 10, m2, 0)
          Id: m3
          Label: Latency threshold calculation
          ReturnData: false
        - Expression: FILL(m3, 0)
          Id: m4
          Label: Latency threshold with missing data points filled
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 1
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  RevokeConcurrencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 80% of the reserved concurrency for the Revoke Lambda has been used. ${WarningAlarmsRunbookURL}
        - WarningAlarmsRunbookURL: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-revoke-concurrency
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref RevokeFunction
      EvaluationPeriods: 1
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Period: 60
      Statistic: Maximum
      Threshold: 64
      TreatMissingData: notBreaching
    Condition: DeployAlarms

  RevokeThroughputAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      AlarmDescription: !Sub
        - 60% of the Revoke Lambda capacity has been used. ${WarningAlarmsRunbookURL}
        - WarningAlarmsRunbookURL: !FindInMap
            - StaticVariables
            - urls
            - WarningAlarmsRunbook
      AlarmName: !Sub ${AWS::StackName}-revoke-throughput
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: e1
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref RevokeFunction
              MetricName: ConcurrentExecutions
              Namespace: AWS/Lambda
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Id: e2
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref RevokeFunction
              MetricName: UnreservedConcurrentExecutions
              Namespace: AWS/Lambda
            Period: 60
            Stat: Maximum
          ReturnData: false
        - Expression: e1 / e2 * 100
          Id: e3
          Label: Throughput Percentage
          ReturnData: true
      OKActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:platform-alarms-sns-warning
      Threshold: 60
      TreatMissingData: notBreaching
    Condition: DeployAlarms

    # SNS Topics
  AlarmWarningSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${AWS::StackName}-warning
      KmsMasterKeyId: !Ref AlarmSNSTopicKey
      FifoTopic: false
      Tags:
        - Key: Environment
          Value: !Ref Environment
      TopicName: !Sub ${AWS::StackName}-warning

  AlarmWarningSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref AlarmWarningSNSTopic
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: !Ref AlarmWarningSNSTopic
            Principal:
              Service: cloudwatch.amazonaws.com

  AlarmSNSTopicKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: Allow Cloudwatch to enqueue encrypted messages
            Effect: Allow
            Resource: '*'
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Principal:
              Service: cloudwatch.amazonaws.com
          - Sid: Allow the account to manage the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-topics
        - Key: Environment
          Value: !Ref Environment

  # Status List Publisher Lambda
  StatusListPublisherFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - StatusListPublisherLogGroup
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2022
        EntryPoints:
          - src/functions/statusListPublisherHandler.ts
    Properties:
      FunctionName: !Sub ${AWS::StackName}-status-list-publisher
      Handler: src/functions/statusListPuslisherHandler.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdA
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdB
          - !ImportValue
            Fn::Sub: ${VpcStackName}-ProtectedSubnetIdC

  StatusListPublisherFunctionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-status-list-publisher-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: StatusListPublisherFunctionLoggingPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt StatusListPublisherLogGroup.Arn
        - PolicyName: DynamoDBReadOnly
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !GetAtt StatusListTable.Arn
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  StatusListPublisherLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-status-list-publisher-logs
      RetentionInDays: !FindInMap
        - LogRetention
        - !Ref Environment
        - RetentionPeriod

  CSLSStatusListPublisherFunctionSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref StatusListPublisherLogGroup
    Condition: IsProdLikeEnvironment

  StatusListPublisherAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-status-list-publisher-access-logs
      RetentionInDays: !FindInMap
        - LogRetention
        - !Ref Environment
        - RetentionPeriod

  CSLSStatusListPublisherFunctionAccessSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !FindInMap
        - CslsConfiguration
        - !Ref Environment
        - CSLSEGRESS
      FilterPattern: ""
      LogGroupName: !Ref StatusListPublisherAccessLogs
    Condition: IsProdLikeEnvironment

  # API Gateway
  PrivateApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${AWS::StackName}-private-api
      Description: Private API gateway for Index Issuance flow
      AlwaysDeploy: true
      StageName: !Ref Environment
      OpenApiVersion: 3.0.0
      AccessLogSetting:
        DestinationArn: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CrsPrivateApiAccessLogs}
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: /*
          HttpMethod: '*'
          DataTraceEnabled: false
          MetricsEnabled: true
          ThrottlingBurstLimit: !FindInMap
            - PrivateApigw
            - !Ref Environment
            - ApiBurstLimit
          ThrottlingRateLimit: !FindInMap
            - PrivateApigw
            - !Ref Environment
            - ApiRateLimit
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./openApiSpecs/crs-private-spec.yaml

  ApiGwBodyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-crs-private-spec
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  CrsPrivateApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-private-api-access-logs
      RetentionInDays: !FindInMap
        - LogRetention
        - !Ref Environment
        - RetentionPeriod

  # Available Slots SQS Queues (Bitstring and Token Status)
  BitstringAvailableSlotsEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the Bitstring Available Slots SQS Queue
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource: '*'
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  BitstringAvailableSlotsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-BitstringAvailableSlotsEncryptionKey
      TargetKeyId: !Ref BitstringAvailableSlotsEncryptionKey

  BitstringAvailableSlotsSQS:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref BitstringAvailableSlotsKeyAlias
      MessageRetentionPeriod: 1209600 # 14 days
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt BitstringAvailableSlotsQueueDLQ.Arn
        maxReceiveCount: 10

  BitstringAvailableSlotsSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - SQS:DeleteMessage
              - SQS:GetQueueAttributes
              - SQS:ChangeMessageVisibility
              - SQS:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - AccountAccess
                  - !Ref Environment
                  - AccountId
            Resource:
              - !GetAtt BitstringAvailableSlotsSQS.Arn
      Queues:
        - !Ref BitstringAvailableSlotsSQS

  BitstringAvailableSlotsQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref BitstringAvailableSlotsKeyAlias
      MessageRetentionPeriod: 604800 # 7 days

  TokenStatusAvailableSlotsEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the Token Status Available Slots SQS Queue
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource: '*'
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  TokenStatusAvailableSlotsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-TokenStatusAvailableSlotsEncryptionKey
      TargetKeyId: !Ref TokenStatusAvailableSlotsEncryptionKey

  TokenStatusAvailableSlotsSQS:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref TokenStatusAvailableSlotsKeyAlias
      MessageRetentionPeriod: 1209600 # 14 days
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TokenStatusAvailableSlotsQueueDLQ.Arn
        maxReceiveCount: 10

  TokenStatusAvailableSlotsSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - SQS:DeleteMessage
              - SQS:GetQueueAttributes
              - SQS:ChangeMessageVisibility
              - SQS:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - AccountAccess
                  - !Ref Environment
                  - AccountId
            Resource:
              - !GetAtt TokenStatusAvailableSlotsSQS.Arn
      Queues:
        - !Ref TokenStatusAvailableSlotsSQS

  TokenStatusAvailableSlotsQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref TokenStatusAvailableSlotsKeyAlias
      MessageRetentionPeriod: 604800 # 7 days

      # TxMA SQS Queue
  TxMAKMSEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A KMS Key for encrypting the SQS Queue for TxMA
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
          - Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Effect: Allow
            Principal:
              AWS: !FindInMap
                - AccountAccess
                - !Ref Environment
                - AccountId
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !FindInMap
        - KMS
        - !Ref Environment
        - PendingDeletionInDays
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  TxMAKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-TxMAKMSEncryptionKey
      TargetKeyId: !Ref TxMAKMSEncryptionKey

  TxMASQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref TxMAKeyAlias
      MessageRetentionPeriod: 604800 # 7 days
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMASQSQueueDeadLetterQueue.Arn
        maxReceiveCount: 5
      VisibilityTimeout: 60

  TxMASQSQueueDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Sub TxMAKMSEncryptionKey
      MessageRetentionPeriod: 259200 # 3 days

  TxMASQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
              - sqs:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - !FindInMap
                  - AccountAccess
                  - !Ref Environment
                  - AccountId
            Resource:
              - !GetAtt TxMASQSQueue.Arn
        Version: "2012-10-17"
      Queues:
        - !Ref TxMASQSQueue

        # CloudFront Set Up
  StatusListBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-status-list
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: BackupFrequency
          Value: Bihourly

  StatusListBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StatusListBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontServicePrincipalReadOnly
            Action:
              - s3:GetObject
            Resource:
              - !Sub arn:aws:s3:::${StatusListBucket}/*
            Principal:
              Service: cloudfront.amazonaws.com
            Effect: Allow
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CredentialStatusCloudFrontDistribution}

  ClientRegistryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-client-registry
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: BackupFrequency
          Value: Daily

  ClientRegistryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ClientRegistryBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Principal:
              Service: lambda.amazonaws.com
            Resource: !Sub arn:aws:s3:::${ClientRegistryBucket}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${IssueStatusListEntryFunction}
          - Effect: Deny
            Action: '*'
            Principal: '*'
            Resource: !Sub arn:aws:s3:::${ClientRegistryBucket}/*
            Condition:
              Bool:
                aws:SecureTransport: false

  ListConfigurationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-list-configuration
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: BackupFrequency
          Value: Daily

  ListConfigurationBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ListConfigurationBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Principal:
              Service: lambda.amazonaws.com
            Resource: !Sub arn:aws:s3:::${ListConfigurationBucket}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${IssueStatusListEntryFunction}
          - Effect: Deny
            Action: '*'
            Principal: '*'
            Resource: !Sub arn:aws:s3:::${ListConfigurationBucket}/*
            Condition:
              Bool:
                aws:SecureTransport: false

  StatusListOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Ref StatusListBucket
        Description: !Sub Ensure requests to ${StatusListBucket} are signed and thus allowed by the S3 resource policy
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CredentialStatusRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub
        - ${dnsPrefix}${dnsSuffix}
        - dnsPrefix: !If
            - StackNameIsCrsBackend
            - ""
            - !Sub ${AWS::StackName}.
          dnsSuffix: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - dnsSuffix
      Type: A
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      AliasTarget:
        DNSName: !GetAtt CredentialStatusCloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  CredentialStatusCloudFrontCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Comment: !Sub ${AWS::StackName} ${Environment} Credential Status
        DefaultTTL: 7200 # 2 hours
        MaxTTL: 39600 # 11 hours
        MinTTL: 0
        Name: !Sub ${AWS::StackName}-${Environment}-credential-status
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingGzip: false
          EnableAcceptEncodingBrotli: false
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none

  CredentialStatusCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub ${AWS::StackName} ${Environment} Credential Status
        HttpVersion: http1.1
        Origins:
          - DomainName: !Sub ${StatusListBucket}.s3.${AWS::Region}.amazonaws.com
            Id: bucketOrigin
            OriginAccessControlId: !Ref StatusListOriginAccessControl
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          CachedMethods:
            - GET
            - HEAD
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: bucketOrigin
          CachePolicyId: !Ref CredentialStatusCloudFrontCachePolicy
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_All
        Logging:
          Bucket: log-archive-cloudfront-logs-523017967436-eu-west-2.s3.amazonaws.com
          Prefix: !Sub ${AWS::AccountId}/${AWS::StackName}/
        Aliases:
          - !Sub
            - ${dnsPrefix}${dnsSuffix}
            - dnsPrefix: !If
                - StackNameIsCrsBackend
                - ""
                - !Sub ${AWS::StackName}.
              dnsSuffix: !FindInMap
                - EnvironmentVariables
                - !Ref Environment
                - dnsSuffix
        ViewerCertificate:
          AcmCertificateArn: !If
            - StackNameIsCrsBackend
            - !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - CertificateArnV1UsEast1
            - !FindInMap
              - EnvironmentVariables
              - dev
              - CertificateWildcardArnV1UsEast1
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  AvailableSlotsSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn: !Ref AvailableSlotsCapacitySNSTopic
      Endpoint: !GetAtt FindAvailableSlotsFunction.Arn

  AvailableSlotsCapacitySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-AvailableSlotsCapacityTopic

  LambdaSNSPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref FindAvailableSlotsFunction
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref AvailableSlotsCapacitySNSTopic

  BitstringQueueCapacityAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-BitstringQueueCapacityAlarm
      AlarmDescription: Alarm if Bitstring queue drops below 25% capacity
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Average
      Period: 60 # Check every minute
      EvaluationPeriods: 1
      Threshold: 2500
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref AvailableSlotsCapacitySNSTopic
      Dimensions:
        - Name: QueueName
          Value: !GetAtt BitstringAvailableSlotsSQS.QueueName

  TokenStatusQueueCapacityAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-TokenStatusQueueCapacityAlarm
      AlarmDescription: Alarm if TokenStatus queue drops below 25% capacity
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Average
      Period: 60 # Check every minute
      EvaluationPeriods: 1
      Threshold: 2500
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref AvailableSlotsCapacitySNSTopic
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TokenStatusAvailableSlotsSQS.QueueName
